{"root":{"data":{"id":"d9o1j6kul600","created":1746429339220,"text":"错题本"},"children":[{"data":{"id":"d9o1jabcsts0","created":1746429347353,"text":"计算机组成原理"},"children":[{"data":{"id":"d9o1t11uqag0","created":1746430110829,"text":"1.1"},"children":[{"data":{"id":"d9o1t69f8kw0","created":1746430122171,"text":"对指令进行译码的是控制器"},"children":[]},{"data":{"id":"d9o1t85ff6g0","created":1746430126283,"text":"地址译码器不属于CPU"},"children":[]},{"data":{"id":"d9o1tvn99qg0","created":1746430177427,"text":"CPU不包括存储器"},"children":[]}]},{"data":{"id":"d9o4vqisba80","created":1746438786331,"text":"2.1"},"children":[{"data":{"id":"d9o4vskmtk00","created":1746438790796,"text":"unsigned数在c语言中是无符号原码形式"},"children":[]},{"data":{"id":"d9o55vzncvc0","created":1746439581876,"text":"算数移位"},"children":[{"data":{"id":"d9o560a2yow0","created":1746439591214,"text":"移出去的位丢弃，空位补0"},"children":[{"data":{"id":"d9ovfgyb4ao0","created":1746513681642,"text":"逻辑移位移除位和新符号位不同为溢出"},"children":[]}]}]},{"data":{"id":"d9o56573afs0","created":1746439601917,"text":"逻辑移位"},"children":[{"data":{"id":"d9o567xdmig0","created":1746439607860,"text":"移出去的位丢弃，空位补符号位"},"children":[]}]},{"data":{"id":"d9ouyskrfdk0","created":1746512374754,"text":"-Y补由Y补每位取反末尾加一"},"children":[]},{"data":{"id":"d9ow7vanms00","created":1746515907060,"text":"双符号位实际上只存储一个另一个因为一定相同所以不存储"},"children":[]},{"data":{"id":"d9ow8q5uuf40","created":1746515974250,"text":"采用最高进位和次高进位判断溢出时是C1不等于C2时溢出"},"children":[]},{"data":{"id":"d9ow9vb8io00","created":1746516063824,"text":"双符号位判断时是正加正溢出叫正溢出(01)反之负溢出"},"children":[]},{"data":{"id":"d9owaz2jzc80","created":1746516150370,"text":"原码乘法符号位不参加运算"},"children":[]},{"data":{"id":"d9owccsv5zk0","created":1746516258623,"text":"加法器低位进位即sub位sub位是表示a-b时如果b要取成-补码时先将b按位取反然后加sub即硬件实现的-b补计算，也刚好可以用其位进行加法或减法的选择"},"children":[]},{"data":{"id":"d9owh8unwzc0","created":1746516641846,"text":"判断CF位时将其做为无符号数的溢出判断"},"children":[]},{"data":{"id":"d9ozsgdtrkw0","created":1746525983578,"text":"浮点数规格化"},"children":[]},{"data":{"id":"d9oztdbohmo0","created":1746526055282,"text":"规格化浮点数的目的是为了增加数据的表示精度"},"children":[]},{"data":{"id":"d9ozvhu5z7s0","created":1746526221835,"text":"补码的规格化形式是小数点后一位与符号位不同"},"children":[]}]},{"data":{"id":"d9pwnvfyqe80","created":1746618721165,"text":"3"},"children":[{"data":{"id":"d9pwnwozal40","created":1746618723887,"text":"主存和cache数据交换对所有程序员透明，主存和缓存数据交换只对应用程序员透明"},"children":[]},{"data":{"id":"d9pwon9c6ug0","created":1746618781714,"text":"分散刷新没有死时间"},"children":[]},{"data":{"id":"d9qkxbws22o0","created":1746687168925,"text":"块和页大小要相同"},"children":[]},{"data":{"id":"d9qmuvkhdww0","created":1746692618845,"text":"几路组几个比较器"},"children":[]},{"data":{"id":"d9qmyputayo0","created":1746692919865,"text":"采用LRU算法时有log2(n)位替换控制位"},"children":[]},{"data":{"id":"d9qnwgwtopc0","created":1746695564777,"text":"分段对程序员不透明分页对程序员透明"},"children":[]},{"data":{"id":"d9qpzyhw7mo0","created":1746701480369,"text":"对于虚拟存储器，当程序正在执行时，由操作系统完成地址映射"},"children":[]},{"data":{"id":"d9qq6i19wz40","created":1746701993085,"text":"快表（TLB）存储在 CPU芯片内部的高速缓存 中"},"children":[]}]},{"data":{"id":"d9rkvtkeh9s0","created":1746788610587,"text":"4"},"children":[{"data":{"id":"d9rkwcbi6y80","created":1746788651408,"text":"ISA没有规定每条指令包含的控制信号"},"children":[]},{"data":{"id":"d9rlllirktk0","created":1746790630542,"text":" 操作码和操作数别弄混了"},"children":[]},{"data":{"id":"d9rloqvleq00","created":1746790877294,"text":"转移指令是修改PC的值，下条地址仍然从PC取出"},"children":[]},{"data":{"id":"d9rmb4yrinc0","created":1746792631973,"text":"变址寻址利于数组"},"children":[]},{"data":{"id":"d9rmd1dzc5k0","created":1746792780914,"text":"寄存器寻址寄存器放的是操作数，寄存器间址才是放的操作数地址"},"children":[]},{"data":{"id":"d9rmg23tkk00","created":1746793017569,"text":"地址相加时短的地址高位要补位，补符号位"},"children":[]},{"data":{"id":"d9s9vapyeb40","created":1746859097312,"text":"RISC（精简指令集） 和 CISC（复杂指令集）"},"children":[]}]},{"data":{"id":"d9sae0g0o8g0","created":1746860563862,"text":"5"},"children":[{"data":{"id":"d9sae1rh1k00","created":1746860566732,"text":"程序状态字控制器不属于控制器"},"children":[]},{"data":{"id":"d9sazewh24o0","created":1746862240980,"text":"只有出现中断请求才会进入中断周期"},"children":[]},{"data":{"id":"d9sazsvy6dc0","created":1746862271423,"text":"多周期CPU各指令的机器周期数可变，各机器周期长度可变"},"children":[]},{"data":{"id":"d9sb8065w5k0","created":1746862914191,"text":"采用cpu内部总线主要是实现简单，但性能较低，冲突较多"},"children":[]},{"data":{"id":"d9sb9d150n40","created":1746863020550,"text":"单总线结构不适配单周期处理器"},"children":[]},{"data":{"id":"d9sclcaajw00","created":1746866780406,"text":"形成微程序入口地址的是机器指令的操作码字段"},"children":[]},{"data":{"id":"d9scm9x8z080","created":1746866853628,"text":"垂直型指令一次只能完成一个基本操作"},"children":[]},{"data":{"id":"d9scmmb69i00","created":1746866880592,"text":"cache缺失不需要异常处理硬件自动完成"},"children":[]},{"data":{"id":"d9sfv5u2uww0","created":1746876013337,"text":"流水线CPU采用时间并行"},"children":[]},{"data":{"id":"d9sg7mmcam80","created":1746876990244,"text":"分支预测用于处理控制冒险"},"children":[]},{"data":{"id":"d9sg7v0k4ns0","created":1746877008518,"text":"静态预测结构总是一样的"},"children":[]}]},{"data":{"id":"d9tzepkqzq00","created":1747032706272,"text":"6"},"children":[{"data":{"id":"d9tzeqqus8o0","created":1747032708818,"text":"总线结构可以减少信息线的条数"},"children":[]},{"data":{"id":"d9tzf0ke2rc0","created":1747032730195,"text":"三总线结构系统是DMA总线、主存总线、I/O总线"},"children":[]},{"data":{"id":"d9tzh0e7axs0","created":1747032886549,"text":"握手应答信号在控制总线传输"},"children":[]},{"data":{"id":"d9tzhb352t40","created":1747032909825,"text":"PCI-Express*16采用串行传输"},"children":[]}]},{"data":{"id":"d9u044mkri80","created":1747034698139,"text":"7"},"children":[{"data":{"id":"d9u04a9uvhc0","created":1747034710430,"text":"I/O设备通过设备控制器和系统总线相连"},"children":[]},{"data":{"id":"d9u07rbltfs0","created":1747034982634,"text":"I/O指令是特权指令"},"children":[]},{"data":{"id":"d9u0a9sti000","created":1747035179585,"text":"端口和接口不同，端口指的是接口中的寄存器"},"children":[]},{"data":{"id":"d9u0b2ffz4g0","created":1747035241903,"text":"统一编址下通过地址码区别存储单元和I/O设备"},"children":[]},{"data":{"id":"d9u0b2g1yqw0","created":1747035241940,"text":"CPU和主存通过I/O总线和I/O接口连接、I/O接口通过通信总线和外设相连"},"children":[]},{"data":{"id":"d9u0kbe25mo0","created":1747035966688,"text":"数据线传输I/O命令"},"children":[]},{"data":{"id":"d9u0kszcwog0","created":1747036004981,"text":"中断向量地址是存储中断服务程序入口地址的地方，而不是入口地址本身。即地址的地址"},"children":[]},{"data":{"id":"d9u0ktkxhg80","created":1747036006285,"text":"中断隐指令 ：在 CPU 响应中断时，自动保存当前执行环境（如寄存器、标志位、程序计数器等），并跳转到中断处理程序入口地址的过程。"},"children":[]},{"data":{"id":"d9u0ktwtp740","created":1747036007004,"text":"cache不涉及中断层面"},"children":[]},{"data":{"id":"d9u0kuds7o00","created":1747036008030,"text":"DMA优先级高于中断请求"},"children":[]},{"data":{"id":"d9u2bi7c7nk0","created":1747040918461,"text":"中断响应在一条指令执行之末"},"children":[]},{"data":{"id":"d9u2bi9ads80","created":1747040918579,"text":"DMA结束需要中断响应"},"children":[]},{"data":{"id":"d9u2ddu09tk0","created":1747041065676,"text":"中断屏蔽标志是改变了多个中断程序执行完的顺序"},"children":[]},{"data":{"id":"d9u2ds3w34o0","created":1747041096749,"text":"响应DAM是每个机器周期后"},"children":[]},{"data":{"id":"d9u2kx2xv3c0","created":1747041656124,"text":"DMA不要借助通用寄存器用自己的"},"children":[]},{"data":{"id":"d9u2l2eiubc0","created":1747041667709,"text":"中断请求的产生是否与当前指令的执行有关 ，仍然取决于中断的类型：\n硬件中断 （如外部设备中断）的产生 与当前指令无关 ，由外部事件触发。\n软件中断 和 异常 （如除法错误、缺页异常）的产生 与当前指令直接相关 。"},"children":[]}]}]},{"data":{"id":"d9rkvw5i0ls0","created":1746788616216,"text":"计算机操作系统"},"children":[]},{"data":{"id":"da46x859n6w0","created":1748069504586,"text":"杂知识点"},"children":[{"data":{"id":"da46xgshjow0","created":1748069523404,"text":"与单道批处理系统相比，多道批处理系统提高CPU 利用率的关键技术是多道程序设计"},"children":[]},{"data":{"id":"da46ynnz60o0","created":1748069616733,"text":"并行的进程之间，可以利用信号量等机制实现同步、互斥等关系，但是并不是所有并行（或并发）进程间都有相互依赖或制约的关系"},"children":[]},{"data":{"id":"da46yxwlg200","created":1748069639022,"text":"临界区是指进程中用于访问临界资源的那段代码"},"children":[]},{"data":{"id":"da4704ey8a80","created":1748069731557,"text":"ASCII码占7bit"},"children":[]}]},{"data":{"id":"d9rkw0vqtr40","created":1746788626510,"text":"数据结构"},"children":[{"data":{"id":"d9uuglocqwg0","created":1747120308918,"text":"1"},"children":[{"data":{"id":"d9uugnwdoko0","created":1747120313757,"text":"数据的逻辑结构独立于其存储结构"},"children":[]},{"data":{"id":"d9uugx4h1u80","created":1747120333838,"text":"存储元素时要存储数据元素之间的关系"},"children":[]},{"data":{"id":"d9uvrc7p5aw0","created":1747123971436,"text":"线性表元素序号从一开始"},"children":[]},{"data":{"id":"d9ux1jeihgo0","created":1747127591837,"text":"静态链表插入和删除不需要移动元素"},"children":[]}]},{"data":{"id":"d9wmbq4jcls0","created":1747300477817,"text":"3"},"children":[{"data":{"id":"d9wmbr6g7iw0","created":1747300480110,"text":"稀疏矩阵的特点是非0元素少不是元素少"},"children":[]},{"data":{"id":"d9wmcc8j3340","created":1747300525948,"text":"稀疏矩阵适合三元组表和十字链表"},"children":[]}]},{"data":{"id":"d9y7k4y897s0","created":1747461940266,"text":"4"},"children":[{"data":{"id":"d9y7k6cy0jc0","created":1747461943332,"text":"KMP算法"},"children":[]}]},{"data":{"id":"d9y86vugurk0","created":1747463722823,"text":"5"},"children":[{"data":{"id":"d9y86x34sxs0","created":1747463725524,"text":"结点总数等于各节点度的和加1"},"children":[]},{"data":{"id":"da46vgos55c0","created":1748069366452,"text":"在有向图的邻接表存储结构中，顶点v在链表(即边表)中出现的次数为顶点v的入度"},"children":[]},{"data":{"id":"d9ye3473mts0","created":1747480354204,"text":"哈夫曼树加权平均长度的计算"},"children":[]}]},{"data":{"id":"d9z4jmp45480","created":1747554997160,"text":"6"},"children":[{"data":{"id":"d9z4jnu49k80","created":1747554999639,"text":"邻接矩阵A的平方的意义"},"children":[]},{"data":{"id":"d9z4o7yxk2o0","created":1747555356922,"text":"广度优先算法使用队列"},"children":[]},{"data":{"id":"d9z4od740lc0","created":1747555368301,"text":"DFS和BFS邻接表时间复杂度(V+E)和邻接矩阵时间复杂度(V^2)，空间复杂度都为(V)"},"children":[]},{"data":{"id":"d9z4yxmwj2w0","created":1747556196433,"text":"在图中使用 DFS（深度优先搜索） 时，其行为类似于树中的 深度优先遍历方式 。"},"children":[]},{"data":{"id":"d9z5690y6800","created":1747556769776,"text":"深度优先要按栈退回，一条结束不一定从源头开始"},"children":[]},{"data":{"id":"d9z9m4t1r3c0","created":1747569298857,"text":"最短路径一定是简单路劲"},"children":[]},{"data":{"id":"d9z9mb8r3340","created":1747569312868,"text":"迪杰斯特拉算法时间复杂度是n^3"},"children":[]},{"data":{"id":"d9z9n9eazcw0","created":1747569387214,"text":"最短路径不能判断回路"},"children":[]},{"data":{"id":"d9z9o1pvzeo0","created":1747569448864,"text":"有向图拓扑有序唯一，入度和出度为0的顶点都只有1个"},"children":[]},{"data":{"id":"d9z9ohwgjd40","created":1747569484090,"text":"有向无环图拓扑序列唯一，不能唯一确定图"},"children":[]},{"data":{"id":"d9z9p1aka0w0","created":1747569526302,"text":"DFS遍历无环有向图，退栈输出逆拓扑序列"},"children":[]}]},{"data":{"id":"d9zyqnaa5ao0","created":1747640180286,"text":"7"},"children":[{"data":{"id":"d9zyqoufwi00","created":1747640183682,"text":"折半查找只能顺序存储不能链式存储"},"children":[]},{"data":{"id":"d9zyqv3jmxc0","created":1747640197293,"text":"折半查找判定树是二叉排序树"},"children":[]},{"data":{"id":"d9zyvhi5vts0","created":1747640559522,"text":"折半查找判定树中，左子树元素个数一定比右子树元素个数多一个或者相等"},"children":[]},{"data":{"id":"d9zzaffql3s0","created":1747641730485,"text":"平衡二叉树树"},"children":[{"data":{"id":"d9zzeenrzhk0","created":1747642042251,"text":"分支主题","image":"https://private-user-images.githubusercontent.com/145943800/445034761-4fa6df31-2a27-4799-98e7-ba412c423ad1.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc2NDI0NjYsIm5iZiI6MTc0NzY0MjE2NiwicGF0aCI6Ii8xNDU5NDM4MDAvNDQ1MDM0NzYxLTRmYTZkZjMxLTJhMjctNDc5OS05OGU3LWJhNDEyYzQyM2FkMS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNTE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDUxOVQwODA5MjZaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT05ZDE4ZDFlOTczMDZmM2M1ZWVkZmNiMTcwODhlNmM0NTJlMGI0YWVhMzJmNWMxY2Y1MzNmZTMxNzVkMzgyYjMyJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.KvA7B7rI3HxApnJInU6pa0SsbpdoAHrJjfnhV8cvPaI","imageTitle":"","imageSize":{"width":200,"height":115}},"children":[]},{"data":{"id":"da04po8ex400","created":1747657030645,"text":"当结点有序插入平衡二叉树时，若关键字个数为(2^k)-1一定是满二叉树"},"children":[]}]},{"data":{"id":"d9zzam4irmw0","created":1747641745044,"text":"红黑树"},"children":[{"data":{"id":"d9zzjaklh480","created":1747642425172,"text":"最短路径一定都是黑色节点"},"children":[]},{"data":{"id":"da00qmhi8fs0","created":1747645820766,"text":"左根右,根叶黑,不红红,黑路同"},"children":[]},{"data":{"id":"d9zztla6xco0","created":1747643232129,"text":"叔叔黑是对旋转点和中心点变色","image":"https://private-user-images.githubusercontent.com/145943800/445043367-760ee12f-3b38-4e1b-b498-c3034bc6405b.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc2NDM1NzUsIm5iZiI6MTc0NzY0MzI3NSwicGF0aCI6Ii8xNDU5NDM4MDAvNDQ1MDQzMzY3LTc2MGVlMTJmLTNiMzgtNGUxYi1iNDk4LWMzMDM0YmM2NDA1Yi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNTE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDUxOVQwODI3NTVaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT03NDFlMTVjMjA4OTdlMTU0YzU4MmM4OTE5Nzk5NWQ4ZDM3ZDZlOTA5OGNhNjc2NGVmZThhZmE0MzgyMmZmMzI1JlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.P8NfKCYbOgMRLQrjt7SfgBA9icHJYJQpy0GXAnsULRo","imageTitle":"","imageSize":{"width":200,"height":131}},"children":[]},{"data":{"id":"da004qa8iqw0","created":1747644105022,"text":"分支主题","image":"https://private-user-images.githubusercontent.com/145943800/445050614-0d2fcbb7-e381-44a1-aa1a-1df22bd977bb.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc2NDQzOTEsIm5iZiI6MTc0NzY0NDA5MSwicGF0aCI6Ii8xNDU5NDM4MDAvNDQ1MDUwNjE0LTBkMmZjYmI3LWUzODEtNDRhMS1hYTFhLTFkZjIyYmQ5NzdiYi5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNTE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDUxOVQwODQxMzFaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT1mMGMwNzRhY2YyODRkYTM5ZTIxMGM5ZDU0ZjFhNzRmOWFiYzI5MGJhNzBhMzIxOWM3MzM1YTdjMDgzYTA0ZmRmJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.xofTyXYHwGFvqdwHEuYAlemqhTMAcZVcs_eE-dNK8vs","imageTitle":"","imageSize":{"width":200,"height":90}},"children":[]}]},{"data":{"id":"da01l3c4aq80","created":1747648208370,"text":"b树"},"children":[{"data":{"id":"da01l7n895s0","created":1747648217749,"text":"超出，中间上移(n/2上取整为中间元素[n是b树的阶])"},"children":[]},{"data":{"id":"da01oa1nfo80","created":1747648458067,"text":"m阶b树根节点最少2个分支，1个元素，其他节点最少m/2上取整个分支，m/2上取整-1个元素"},"children":[]},{"data":{"id":"da01p14wumw0","created":1747648517037,"text":"分支主题","image":"https://private-user-images.githubusercontent.com/145943800/445084775-c1fc6754-8ecf-46a1-8b93-d27967cceb49.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3NDc2NDkyMTksIm5iZiI6MTc0NzY0ODkxOSwicGF0aCI6Ii8xNDU5NDM4MDAvNDQ1MDg0Nzc1LWMxZmM2NzU0LThlY2YtNDZhMS04YjkzLWQyNzk2N2NjZWI0OS5wbmc_WC1BbXotQWxnb3JpdGhtPUFXUzQtSE1BQy1TSEEyNTYmWC1BbXotQ3JlZGVudGlhbD1BS0lBVkNPRFlMU0E1M1BRSzRaQSUyRjIwMjUwNTE5JTJGdXMtZWFzdC0xJTJGczMlMkZhd3M0X3JlcXVlc3QmWC1BbXotRGF0ZT0yMDI1MDUxOVQxMDAxNTlaJlgtQW16LUV4cGlyZXM9MzAwJlgtQW16LVNpZ25hdHVyZT05YzdiYTAzMDNiZDY5OTc1ZDM3MWExNjMyZTAyMmIzYmExYTUyZDFiNzkyYWJlZTQwY2Y5MWVhMDBlZDAzOGViJlgtQW16LVNpZ25lZEhlYWRlcnM9aG9zdCJ9.CqDH5CWs8u3Lyel58EIsMYLPw699ZIZSCGGUHF8r-e8","imageTitle":"","imageSize":{"width":200,"height":82}},"children":[]},{"data":{"id":"da021v8w3z40","created":1747649522951,"text":"b树的高h>logm(n+1)且h<log[m/2]((n+1)/2)+1\n[m/2]是上取整"},"children":[]},{"data":{"id":"da04m9hthk00","created":1747656763469,"text":"b树子节点不会比父节点多"},"children":[]}]},{"data":{"id":"da01vx9cuvs0","created":1747649057148,"text":"b+树"},"children":[{"data":{"id":"da01vzuhilk0","created":1747649062779,"text":"与b树最大的不同是b+树的分支个数与元素相同"},"children":[]}]}]},{"data":{"id":"da1rf33q9co0","created":1747822646492,"text":"8"},"children":[{"data":{"id":"da1rf52tafk0","created":1747822650790,"text":"基本有序的情况下快排退化到O(n)"},"children":[]},{"data":{"id":"da1rh5bjv600","created":1747822808047,"text":"冒泡有标志位来确定是否已经排好了来确定，所以和初试序列有关"},"children":[]},{"data":{"id":"da1ro1usmf40","created":1747823349053,"text":"选择排序（Selection Sort）思想：每一轮从未排序区间中选择最小（或最大）元素，与未排序区间的第一个元素交换位置，逐步将未排序区间缩小。"},"children":[]},{"data":{"id":"da1roh4fhf40","created":1747823382287,"text":"选择排序是 “选最值交换”，通过减少交换次数提高效率，但无法利用数据有序性。插入排序是 “局部插入调整”，通过数据有序性减少比较和移动次数，在近乎有序时性能更优。"},"children":[]},{"data":{"id":"da1rrg6vwyw0","created":1747823615351,"text":"堆排序可以并行"},"children":[]},{"data":{"id":"da1rwnl8p6g0","created":1747824023277,"text":"简单有序只要交换位置不用挪"},"children":[]},{"data":{"id":"da1s5hgeog00","created":1747824715202,"text":"败者树是完全二叉树"},"children":[]}]}]},{"data":{"id":"d9rkw526xjs0","created":1746788635607,"text":"计算机网络"},"children":[{"data":{"id":"da2g75gmp5s0","created":1747892552460,"text":"1"},"children":[{"data":{"id":"da2g774th9s0","created":1747892556099,"text":"OSI数据链路层没有拥塞控制功能"},"children":[]},{"data":{"id":"da2g7hei0z40","created":1747892578453,"text":"会话层建立同步点"},"children":[]}]},{"data":{"id":"da3b2u8opq00","created":1747979668986,"text":"2"},"children":[{"data":{"id":"da3alqxolsg0","created":1747978329599,"text":"曼彻斯特编码下，数据率（比特率）等于波特率的一半。以太网是曼切斯特编码"},"children":[]},{"data":{"id":"da3ameats0w0","created":1747978380460,"text":"数据传输速率（bps）= 波特率（Baud）× 每个码元符号所携带的比特数‌‌"},"children":[]},{"data":{"id":"da3asblw0p40","created":1747978844783,"text":"采样率不是信道带宽"},"children":[]},{"data":{"id":"da3ayh1hpo00","created":1747979326796,"text":"物理地址不属于物理层的定义,应该是数据链路层的"},"children":[]},{"data":{"id":"da3b1y6hedc0","created":1747979599195,"text":"转发器用来放大信号"},"children":[]},{"data":{"id":"da3b23f10dk0","created":1747979610596,"text":"物理层相连要求数据传输速率相同"},"children":[]}]},{"data":{"id":"da3b2wisdmw0","created":1747979673950,"text":"3"},"children":[{"data":{"id":"da5vu86jqhk0","created":1748241357275,"text":"ICMP是网络层标准"},"children":[]},{"data":{"id":"da5vuj7yq9c0","created":1748241381305,"text":"为结点屏蔽物理传输细节的是物理层"},"children":[]},{"data":{"id":"da5w8uakdv40","created":1748242502506,"text":"数据链路层也提供纠错"},"children":[]}]}]}]},"template":"default","theme":"fresh-blue","version":"1.4.43"}